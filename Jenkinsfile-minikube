pipeline{
    agent any
    environment {
       DOCKERHUB_CREDENTIALS = credentials('dockerhublogin')
     }  
    stages{
       stage("Git Check Out"){
          steps{
            git branch: 'main', credentialsId: 'githubUserDetails1', url: 'https://github.com/pseshagiri/order-ms.git'
          }
       }
       stage("Clean Build"){
           steps{
           //withMaven(globalMavenSettingsConfig: '--- Use system default settings or file path ---', jdk: '--- Use system default JDK ---', maven: 'Maven3', mavenSettingsConfig: '--- Use system default settings or file path ---') {
    			sh "mvn clean install"
			//}
               
           }
        }
		 stage("Docker Image and Building"){
           steps{
            script {
              sh 'docker build -t pseshagiri/microservices:order-ms-1.3 .'
            }
               
           }
        }
        stage("Docker Hub Push"){
          steps{
           script{
            withCredentials([usernameColonPassword(credentialsId: 'dockerhublogin', 
                     variable: 'dockerhublogin')]) {    		
    		 sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'  
    		  
			}
		  }	
		 }	        
         }
        
        stage('Push') {
           steps {
           script{
             sh 'docker push pseshagiri/microservices:order-ms-1.3'
            } 
           }
        }    // push    
        stage("Kubernetus Deployment to mini kube"){
         steps{
            script{
               kubeconfig(credentialsId:'minikubeconfig',serverUrl:'http://192.168.49.1:8443') {
                 sh 'kubectl apply -f ./deployment.yaml'   
               }                
              }
            }
          }  // minikube                                           
        } //stages
        post{
          always{
            //script{
                sh 'docker logout'
            //}

          } 
        }

    }// pipeline

   
   
  
    

